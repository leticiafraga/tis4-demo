name: React App Deployment

on:
    push:
        branches: ["master"]

jobs:
    test:
        name: Unit Tests
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Node.js environment
              uses: actions/setup-node@v4
              with:
                  node-version: "20.12.2"
            - name: Install dependencies
              run: npm i
            - name: Test
              run: npm run test

    cypress-run:
        runs-on: ubuntu-22.04
        name: Acceptance tests
        needs: test
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
            - name: Install dependencies
              run: npm i
            - name: Cypress run
              uses: cypress-io/github-action@v6
              with:
                  build: npm run build
                  start: npm run dev

    build_and_deploy:
        name: Build and Deploy
        runs-on: ubuntu-latest
        needs: [test, cypress-run]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Node.js environment
              uses: actions/setup-node@v4
              with:
                  node-version: "20.12.2"

            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
            - name: Install dependencies
              run: npm i

            - name: Build
              run: npm run build

            - uses: FirebaseExtended/action-hosting-deploy@v0
              with:
                  repoToken: ${{ secrets.GITHUB_TOKEN }}
                  firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_TIS4_DEMO }}
                  channelId: live
                  projectId: tis4-demo
